#!/bin/bash
# Configure script for fresh OCA code release
# authored by Robert Stainforth at University of Liverpool
# rpfs@liv.ac.uk

# Obtain the path to the user's RAT environment file
# If you are using a Snoing installation, this is
# likely to be env_rat-dev.sh NOT rat-dev/env.sh

printf "\nWelcome to the OCA software setup for SNO+.\n\nEnter the FULL system path to your RAT environment file\n(no use of '~' to shortcut to home directory!).\nIf you use a 'snoing' installation of RAT, this is likely\nto be located somewhere such as\n\${SOME-PATH}/snoing/install/env_rat-dev.sh. \n\n"
RATFILE=""
printf "Enter Path: " 
read -e ratenvpath

if [ -e "$ratenvpath" ]
then
 RATFILE="$ratenvpath"
 printf "\n"
 printf "RAT environment file path to be used:\n"
 printf ${RATFILE}
else
 printf "RAT environment file (or path) does not exist!\nCheck and try again. \n\n"
 exit 1
fi 

printf "\n\n"

# Obtain the current directory which will be used as
# the installation directory and the data directory where
# files generalted by oca will be stored
OCAROOT=`pwd`
OCADATA=${OCAROOT}/data

# Now create the env_oca.sh and env_oca.csh files
printf "%-25s" "Generating oca_env.sh..."
cat > env_oca.sh << EOF
#!/bin/bash

export OCA_ROOT=$OCAROOT
export OCA_DATA=$OCADATA

export RATENVFILE=$RATFILE
source $RATFILE

# These are just to avoid having to move to the bin directory.
export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\$OCA_ROOT/lib
system=\`uname -s\`
if [ "\$system" == "Darwin" ]; then
    export DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:\$OCA_ROOT/lib
fi

export PATH=\$PATH:\$OCA_ROOT/bin 
EOF

printf "\n"
[[ -e env_oca.sh ]] && chmod +x env_oca.sh && printf "env_oca.sh has been created!\n\nPlease type 'source env_oca.sh' at the command line here and then install OCA by typing:\n\n'make clean', 'make' and 'make install'\n\nrespectively at the command line in the '"
printf `pwd`
printf "/src' directory.\n\n"
printf "Remember: You need to 'source env_oca.sh' each time you use OCA\n\n"
